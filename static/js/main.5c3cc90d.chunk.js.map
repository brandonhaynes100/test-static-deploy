{"version":3,"sources":["logo.svg","components/MyNav/index.js","components/MyJumbo/index.js","components/ProjectCard/index.js","components/ProjectsContainer/index.js","App.js","reportWebVitals.js","index.js"],"names":["MyNav","Navbar","bg","variant","Brand","href","Nav","className","Link","MyJumbo","Jumbotron","fluid","Container","ProjectCard","props","Card","style","width","Img","src","Body","Title","title","Text","Button","deployedLink","githubLink","ProjectsContainer","CardDeck","text","map","projectInfo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAAe,I,2BCmBAA,MAhBf,WACE,OACE,mCACE,eAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAA1B,UACE,cAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,QAAnB,8BACA,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,UACE,cAACD,EAAA,EAAIE,KAAL,CAAUH,KAAK,SAAf,mBACA,cAACC,EAAA,EAAIE,KAAL,CAAUH,KAAK,YAAf,sBACA,cAACC,EAAA,EAAIE,KAAL,CAAUH,KAAK,WAAf,8B,gBCOKI,MAff,WACE,OACE,mCACE,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACA,eAACC,EAAA,EAAD,WACE,gDACA,mE,gBCcOC,MApBf,SAAqBC,GACnB,OACE,mCACE,eAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,UACE,cAACF,EAAA,EAAKG,IAAN,CAAUf,QAAQ,MAAMgB,IAAI,uBAC5B,eAACJ,EAAA,EAAKK,KAAN,WACE,cAACL,EAAA,EAAKM,MAAN,UAAaP,EAAMQ,QACnB,cAACP,EAAA,EAAKQ,KAAN,6GAIA,cAACC,EAAA,EAAD,CAAQnB,KAAMS,EAAMW,aAActB,QAAQ,UAA1C,uBACA,cAACqB,EAAA,EAAD,CAAQnB,KAAMS,EAAMY,WAAYvB,QAAQ,YAAxC,mC,QCgCKwB,MA3Cf,WAyBE,OACE,mCACA,cAACC,EAAA,EAAD,UAzBkB,CACpB,CACEN,MAAO,QACPO,KAAM,OACNJ,aAAc,0BACdC,WAAY,2BAEd,CACEJ,MAAO,SACPO,KAAM,QACNJ,aAAc,0BACdC,WAAY,2BAEd,CACEJ,MAAO,SACPO,KAAM,QACNJ,aAAc,0BACdC,WAAY,4BASOI,KAAI,SAACC,GACtB,OACE,cAAC,EAAD,CACET,MAAOS,EAAYT,MACnBO,KAAME,EAAYF,KAClBJ,aAAcM,EAAYN,aAC1BC,WAAYK,EAAYL,qBCpBnBM,MAXf,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCASC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5c3cc90d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.4bdbcf83.svg\";","// import 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navbar, Nav } from \"react-bootstrap\"\n\nfunction MyNav() {\n  return (\n    <>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"#home\">brandonhaynes100</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"#about\">About</Nav.Link>\n          <Nav.Link href=\"#projects\">Projects</Nav.Link>\n          <Nav.Link href=\"#contact\">Contact</Nav.Link>\n        </Nav>\n      </Navbar>\n\n    </>\n  );\n}\n\nexport default MyNav;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport { Jumbotron, Container } from \"react-bootstrap\"\n\nfunction MyJumbo() {\n  return (\n    <>\n      <Jumbotron fluid>\n      <Container>\n        <h1>Brandon Haynes</h1>\n        <p>\n          Mentor, Developer, Veteran\n        </p>\n      </Container>\n    </Jumbotron>\n    </>\n  );\n}\n\nexport default MyJumbo;","// import 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Button } from \"react-bootstrap\"\n\nfunction ProjectCard(props) {\n  return (\n    <>\n      <Card style={{ width: '18rem' }}>\n        <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n        <Card.Body>\n          <Card.Title>{props.title}</Card.Title>\n          <Card.Text>\n            Some quick example text to build on the card title and make up the bulk of\n            the card's content.\n          </Card.Text>\n          <Button href={props.deployedLink} variant=\"primary\">Visit App</Button>\n          <Button href={props.githubLink} variant=\"secondary\">Visit Github</Button>\n        </Card.Body>\n      </Card>\n\n    </>\n  );\n}\n\nexport default ProjectCard;","// import 'bootstrap/dist/css/bootstrap.min.css';\nimport ProjectCard from \"../ProjectCard\"\nimport {CardDeck} from \"react-bootstrap\"\n\nfunction ProjectsContainer() {\n\nlet projectArrayOne = [\n  {\n    title: \"title\",\n    text: \"text\",\n    deployedLink: \"https://www.google.com/\",\n    githubLink: \"https://www.google.com/\"\n  },\n  {\n    title: \"title2\",\n    text: \"text2\",\n    deployedLink: \"https://www.google.com/\",\n    githubLink: \"https://www.google.com/\"\n  },\n  {\n    title: \"title3\",\n    text: \"text3\",\n    deployedLink: \"https://www.google.com/\",\n    githubLink: \"https://www.google.com/\"\n  }\n]\n\n\n\n  return (\n    <>\n    <CardDeck>\n      {projectArrayOne.map((projectInfo) => {\n      return (\n        <ProjectCard \n          title={projectInfo.title}\n          text={projectInfo.text}\n          deployedLink={projectInfo.deployedLink}\n          githubLink={projectInfo.githubLink}\n        />\n      )\n      })}\n    </CardDeck>\n    </>\n  );\n}\n\nexport default ProjectsContainer;","import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MyNav from \"./components/MyNav\"\nimport MyJumbo from \"./components/MyJumbo\"\nimport ProjectsContainer from \"./components/ProjectsContainer\"\n\nfunction App() {\n  return (\n    <>\n      <MyNav></MyNav>\n      <MyJumbo></MyJumbo>\n      <ProjectsContainer></ProjectsContainer>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}